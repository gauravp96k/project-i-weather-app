{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_STOP = exports.SHOULD_SKIP = exports.REMOVED = void 0;\nvar virtualTypes = require(\"./lib/virtual-types.js\");\nvar _debug = require(\"debug\");\nvar _index = require(\"../index.js\");\nvar _index2 = require(\"../scope/index.js\");\nvar _t = require(\"@babel/types\");\nvar t = _t;\nvar cache = require(\"../cache.js\");\nvar _generator = require(\"@babel/generator\");\nvar NodePath_ancestry = require(\"./ancestry.js\");\nvar NodePath_inference = require(\"./inference/index.js\");\nvar NodePath_replacement = require(\"./replacement.js\");\nvar NodePath_evaluation = require(\"./evaluation.js\");\nvar NodePath_conversion = require(\"./conversion.js\");\nvar NodePath_introspection = require(\"./introspection.js\");\nvar NodePath_context = require(\"./context.js\");\nvar NodePath_removal = require(\"./removal.js\");\nvar NodePath_modification = require(\"./modification.js\");\nvar NodePath_family = require(\"./family.js\");\nvar NodePath_comments = require(\"./comments.js\");\nvar NodePath_virtual_types_validator = require(\"./lib/virtual-types-validator.js\");\nconst {\n  validate\n} = _t;\nconst debug = _debug(\"babel\");\nconst REMOVED = exports.REMOVED = 1 << 0;\nconst SHOULD_STOP = exports.SHOULD_STOP = 1 << 1;\nconst SHOULD_SKIP = exports.SHOULD_SKIP = 1 << 2;\nconst NodePath_Final = exports.default = class NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n  get removed() {\n    return (this._traverseFlags & 1) > 0;\n  }\n  set removed(v) {\n    if (v) this._traverseFlags |= 1;else this._traverseFlags &= -2;\n  }\n  get shouldStop() {\n    return (this._traverseFlags & 2) > 0;\n  }\n  set shouldStop(v) {\n    if (v) this._traverseFlags |= 2;else this._traverseFlags &= -3;\n  }\n  get shouldSkip() {\n    return (this._traverseFlags & 4) > 0;\n  }\n  set shouldSkip(v) {\n    if (v) this._traverseFlags |= 4;else this._traverseFlags &= -5;\n  }\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n    const targetNode = container[key];\n    const paths = cache.getOrCreateCachedPaths(hub, parent);\n    let path = paths.get(targetNode);\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n  getScope(scope) {\n    return this.isScope() ? new _index2.default(this) : scope;\n  }\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n    return this.data[key] = val;\n  }\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n  hasNode() {\n    return this.node != null;\n  }\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n  set(key, node) {\n    validate(this.node, key, node);\n    this.node[key] = node;\n  }\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n    return parts.join(\".\");\n  }\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n  get inList() {\n    return !!this.listKey;\n  }\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n};\nconst methods = {\n  findParent: NodePath_ancestry.findParent,\n  find: NodePath_ancestry.find,\n  getFunctionParent: NodePath_ancestry.getFunctionParent,\n  getStatementParent: NodePath_ancestry.getStatementParent,\n  getEarliestCommonAncestorFrom: NodePath_ancestry.getEarliestCommonAncestorFrom,\n  getDeepestCommonAncestorFrom: NodePath_ancestry.getDeepestCommonAncestorFrom,\n  getAncestry: NodePath_ancestry.getAncestry,\n  isAncestor: NodePath_ancestry.isAncestor,\n  isDescendant: NodePath_ancestry.isDescendant,\n  inType: NodePath_ancestry.inType,\n  getTypeAnnotation: NodePath_inference.getTypeAnnotation,\n  isBaseType: NodePath_inference.isBaseType,\n  couldBeBaseType: NodePath_inference.couldBeBaseType,\n  baseTypeStrictlyMatches: NodePath_inference.baseTypeStrictlyMatches,\n  isGenericType: NodePath_inference.isGenericType,\n  replaceWithMultiple: NodePath_replacement.replaceWithMultiple,\n  replaceWithSourceString: NodePath_replacement.replaceWithSourceString,\n  replaceWith: NodePath_replacement.replaceWith,\n  replaceExpressionWithStatements: NodePath_replacement.replaceExpressionWithStatements,\n  replaceInline: NodePath_replacement.replaceInline,\n  evaluateTruthy: NodePath_evaluation.evaluateTruthy,\n  evaluate: NodePath_evaluation.evaluate,\n  toComputedKey: NodePath_conversion.toComputedKey,\n  ensureBlock: NodePath_conversion.ensureBlock,\n  unwrapFunctionEnvironment: NodePath_conversion.unwrapFunctionEnvironment,\n  arrowFunctionToExpression: NodePath_conversion.arrowFunctionToExpression,\n  splitExportDeclaration: NodePath_conversion.splitExportDeclaration,\n  ensureFunctionName: NodePath_conversion.ensureFunctionName,\n  matchesPattern: NodePath_introspection.matchesPattern,\n  has: NodePath_introspection.has,\n  isStatic: NodePath_introspection.isStatic,\n  is: NodePath_introspection.is,\n  isnt: NodePath_introspection.isnt,\n  equals: NodePath_introspection.equals,\n  isNodeType: NodePath_introspection.isNodeType,\n  canHaveVariableDeclarationOrExpression: NodePath_introspection.canHaveVariableDeclarationOrExpression,\n  canSwapBetweenExpressionAndStatement: NodePath_introspection.canSwapBetweenExpressionAndStatement,\n  isCompletionRecord: NodePath_introspection.isCompletionRecord,\n  isStatementOrBlock: NodePath_introspection.isStatementOrBlock,\n  referencesImport: NodePath_introspection.referencesImport,\n  getSource: NodePath_introspection.getSource,\n  willIMaybeExecuteBefore: NodePath_introspection.willIMaybeExecuteBefore,\n  _guessExecutionStatusRelativeTo: NodePath_introspection._guessExecutionStatusRelativeTo,\n  resolve: NodePath_introspection.resolve,\n  isConstantExpression: NodePath_introspection.isConstantExpression,\n  isInStrictMode: NodePath_introspection.isInStrictMode,\n  call: NodePath_context.call,\n  isDenylisted: NodePath_context.isDenylisted,\n  isBlacklisted: NodePath_context.isBlacklisted,\n  visit: NodePath_context.visit,\n  skip: NodePath_context.skip,\n  skipKey: NodePath_context.skipKey,\n  stop: NodePath_context.stop,\n  setScope: NodePath_context.setScope,\n  setContext: NodePath_context.setContext,\n  resync: NodePath_context.resync,\n  popContext: NodePath_context.popContext,\n  pushContext: NodePath_context.pushContext,\n  setup: NodePath_context.setup,\n  setKey: NodePath_context.setKey,\n  requeue: NodePath_context.requeue,\n  requeueComputedKeyAndDecorators: NodePath_context.requeueComputedKeyAndDecorators,\n  remove: NodePath_removal.remove,\n  insertBefore: NodePath_modification.insertBefore,\n  insertAfter: NodePath_modification.insertAfter,\n  updateSiblingKeys: NodePath_modification.updateSiblingKeys,\n  unshiftContainer: NodePath_modification.unshiftContainer,\n  pushContainer: NodePath_modification.pushContainer,\n  hoist: NodePath_modification.hoist,\n  getOpposite: NodePath_family.getOpposite,\n  getCompletionRecords: NodePath_family.getCompletionRecords,\n  getSibling: NodePath_family.getSibling,\n  getPrevSibling: NodePath_family.getPrevSibling,\n  getNextSibling: NodePath_family.getNextSibling,\n  getAllNextSiblings: NodePath_family.getAllNextSiblings,\n  getAllPrevSiblings: NodePath_family.getAllPrevSiblings,\n  get: NodePath_family.get,\n  getAssignmentIdentifiers: NodePath_family.getAssignmentIdentifiers,\n  getBindingIdentifiers: NodePath_family.getBindingIdentifiers,\n  getOuterBindingIdentifiers: NodePath_family.getOuterBindingIdentifiers,\n  getBindingIdentifierPaths: NodePath_family.getBindingIdentifierPaths,\n  getOuterBindingIdentifierPaths: NodePath_family.getOuterBindingIdentifierPaths,\n  shareCommentsWithSiblings: NodePath_comments.shareCommentsWithSiblings,\n  addComment: NodePath_comments.addComment,\n  addComments: NodePath_comments.addComments\n};\nObject.assign(NodePath_Final.prototype, methods);\n{\n  NodePath_Final.prototype.arrowFunctionToShadowed = NodePath_conversion[String(\"arrowFunctionToShadowed\")];\n}\n{\n  NodePath_Final.prototype._guessExecutionStatusRelativeToDifferentFunctions = NodePath_introspection._guessExecutionStatusRelativeTo;\n}\n{\n  NodePath_Final.prototype._guessExecutionStatusRelativeToDifferentFunctions = NodePath_introspection._guessExecutionStatusRelativeTo;\n  Object.assign(NodePath_Final.prototype, {\n    _getTypeAnnotation: NodePath_inference._getTypeAnnotation,\n    _replaceWith: NodePath_replacement._replaceWith,\n    _resolve: NodePath_introspection._resolve,\n    _call: NodePath_context._call,\n    _resyncParent: NodePath_context._resyncParent,\n    _resyncKey: NodePath_context._resyncKey,\n    _resyncList: NodePath_context._resyncList,\n    _resyncRemoved: NodePath_context._resyncRemoved,\n    _getQueueContexts: NodePath_context._getQueueContexts,\n    _removeFromScope: NodePath_removal._removeFromScope,\n    _callRemovalHooks: NodePath_removal._callRemovalHooks,\n    _remove: NodePath_removal._remove,\n    _markRemoved: NodePath_removal._markRemoved,\n    _assertUnremoved: NodePath_removal._assertUnremoved,\n    _containerInsert: NodePath_modification._containerInsert,\n    _containerInsertBefore: NodePath_modification._containerInsertBefore,\n    _containerInsertAfter: NodePath_modification._containerInsertAfter,\n    _verifyNodeList: NodePath_modification._verifyNodeList,\n    _getKey: NodePath_family._getKey,\n    _getPattern: NodePath_family._getPattern\n  });\n}\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n  NodePath_Final.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n  NodePath_Final.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\nObject.assign(NodePath_Final.prototype, NodePath_virtual_types_validator);\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (!t.TYPES.includes(type)) t.TYPES.push(type);\n}","map":{"version":3,"names":["virtualTypes","require","_debug","_index","_index2","_t","t","cache","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","NodePath_virtual_types_validator","validate","debug","REMOVED","exports","SHOULD_STOP","SHOULD_SKIP","NodePath_Final","default","NodePath","constructor","hub","parent","contexts","state","opts","_traverseFlags","skipKeys","parentPath","container","listKey","key","node","type","data","context","scope","removed","v","shouldStop","shouldSkip","get","Error","targetNode","paths","getOrCreateCachedPaths","path","set","setup","getScope","isScope","setData","val","Object","create","getData","def","undefined","hasNode","buildCodeFrameError","msg","SyntaxError","buildError","traverse","visitor","getPathLocation","parts","inList","unshift","join","message","enabled","toString","code","parentKey","methods","findParent","find","getFunctionParent","getStatementParent","getEarliestCommonAncestorFrom","getDeepestCommonAncestorFrom","getAncestry","isAncestor","isDescendant","inType","getTypeAnnotation","isBaseType","couldBeBaseType","baseTypeStrictlyMatches","isGenericType","replaceWithMultiple","replaceWithSourceString","replaceWith","replaceExpressionWithStatements","replaceInline","evaluateTruthy","evaluate","toComputedKey","ensureBlock","unwrapFunctionEnvironment","arrowFunctionToExpression","splitExportDeclaration","ensureFunctionName","matchesPattern","has","isStatic","is","isnt","equals","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","isCompletionRecord","isStatementOrBlock","referencesImport","getSource","willIMaybeExecuteBefore","_guessExecutionStatusRelativeTo","resolve","isConstantExpression","isInStrictMode","call","isDenylisted","isBlacklisted","visit","skip","skipKey","stop","setScope","setContext","resync","popContext","pushContext","setKey","requeue","requeueComputedKeyAndDecorators","remove","insertBefore","insertAfter","updateSiblingKeys","unshiftContainer","pushContainer","hoist","getOpposite","getCompletionRecords","getSibling","getPrevSibling","getNextSibling","getAllNextSiblings","getAllPrevSiblings","getAssignmentIdentifiers","getBindingIdentifiers","getOuterBindingIdentifiers","getBindingIdentifierPaths","getOuterBindingIdentifierPaths","shareCommentsWithSiblings","addComment","addComments","assign","prototype","arrowFunctionToShadowed","String","_guessExecutionStatusRelativeToDifferentFunctions","_getTypeAnnotation","_replaceWith","_resolve","_call","_resyncParent","_resyncKey","_resyncList","_resyncRemoved","_getQueueContexts","_removeFromScope","_callRemovalHooks","_remove","_markRemoved","_assertUnremoved","_containerInsert","_containerInsertBefore","_containerInsertAfter","_verifyNodeList","_getKey","_getPattern","TYPES","typeKey","fn","TypeError","keys","includes","push"],"sources":["C:\\Users\\Mr. Gaurav\\Desktop\\project i\\weather-app\\node_modules\\@babel\\traverse\\src\\path\\index.ts"],"sourcesContent":["import type { HubInterface } from \"../hub.ts\";\nimport type TraversalContext from \"../context.ts\";\nimport type { ExplodedTraverseOptions } from \"../index.ts\";\nimport * as virtualTypes from \"./lib/virtual-types.ts\";\nimport buildDebug from \"debug\";\nimport traverse from \"../index.ts\";\nimport type { Visitor } from \"../types.ts\";\nimport Scope from \"../scope/index.ts\";\nimport { validate } from \"@babel/types\";\nimport * as t from \"@babel/types\";\nimport * as cache from \"../cache.ts\";\nimport generator from \"@babel/generator\";\n\n// NodePath is split across many files.\nimport * as NodePath_ancestry from \"./ancestry.ts\";\nimport * as NodePath_inference from \"./inference/index.ts\";\nimport * as NodePath_replacement from \"./replacement.ts\";\nimport * as NodePath_evaluation from \"./evaluation.ts\";\nimport * as NodePath_conversion from \"./conversion.ts\";\nimport * as NodePath_introspection from \"./introspection.ts\";\nimport * as NodePath_context from \"./context.ts\";\nimport * as NodePath_removal from \"./removal.ts\";\nimport * as NodePath_modification from \"./modification.ts\";\nimport * as NodePath_family from \"./family.ts\";\nimport * as NodePath_comments from \"./comments.ts\";\nimport * as NodePath_virtual_types_validator from \"./lib/virtual-types-validator.ts\";\nimport type { NodePathAssertions } from \"./generated/asserts.ts\";\nimport type { NodePathValidators } from \"./generated/validators.ts\";\n\nconst debug = buildDebug(\"babel\");\n\nexport const REMOVED = 1 << 0;\nexport const SHOULD_STOP = 1 << 1;\nexport const SHOULD_SKIP = 1 << 2;\n\ndeclare const bit: import(\"../../../../scripts/babel-plugin-bit-decorator/types.d.ts\").BitDecorator<any>;\n\nconst NodePath_Final = class NodePath {\n  constructor(hub: HubInterface, parent: t.Node | null) {\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n\n    this.context = null;\n    this.scope = null;\n  }\n\n  declare parent: t.Node;\n  declare hub: HubInterface;\n  declare data: Record<string | symbol, unknown>;\n  // TraversalContext is configured by setContext\n  declare context: TraversalContext;\n  declare scope: Scope;\n\n  contexts: Array<TraversalContext> = [];\n  state: any = null;\n  opts: ExplodedTraverseOptions | null = null;\n\n  @bit.storage _traverseFlags: number;\n  @bit(REMOVED) accessor removed = false;\n  @bit(SHOULD_STOP) accessor shouldStop = false;\n  @bit(SHOULD_SKIP) accessor shouldSkip = false;\n\n  skipKeys: Record<string, boolean> | null = null;\n  parentPath: NodePath_Final | null = null;\n  container: t.Node | Array<t.Node> | null = null;\n  listKey: string | null = null;\n  key: string | number | null = null;\n  node: t.Node | null = null;\n  type: t.Node[\"type\"] | null = null;\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key,\n  }: {\n    hub?: HubInterface;\n    parentPath: NodePath_Final | null;\n    parent: t.Node;\n    container: t.Node | t.Node[];\n    listKey?: string;\n    key: string | number;\n  }): NodePath_Final {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode =\n      // @ts-expect-error key must present in container\n      container[key];\n\n    const paths = cache.getOrCreateCachedPaths(hub, parent);\n\n    let path = paths.get(targetNode);\n    if (!path) {\n      path = new NodePath(hub, parent) as NodePath_Final;\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n\n    return path;\n  }\n\n  getScope(this: NodePath_Final, scope: Scope): Scope {\n    return this.isScope() ? new Scope(this) : scope;\n  }\n\n  setData(key: string | symbol, val: any): any {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n    return (this.data[key] = val);\n  }\n\n  getData(key: string | symbol, def?: any): any {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  hasNode(): boolean {\n    return this.node != null;\n  }\n\n  buildCodeFrameError(\n    msg: string,\n    Error: new () => Error = SyntaxError,\n  ): Error {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse<T>(this: NodePath_Final, visitor: Visitor<T>, state: T): void;\n  traverse(this: NodePath_Final, visitor: Visitor): void;\n  traverse(this: NodePath_Final, visitor: any, state?: any) {\n    traverse(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key: string, node: any) {\n    validate(this.node, key, node);\n    // @ts-expect-error key must present in this.node\n    this.node[key] = node;\n  }\n\n  getPathLocation(this: NodePath_Final): string {\n    const parts = [];\n    let path: NodePath_Final = this;\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while ((path = path.parentPath));\n    return parts.join(\".\");\n  }\n\n  debug(this: NodePath_Final, message: string) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return generator(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n    // ignore inList = true as it should depend on `listKey`\n  }\n\n  get parentKey(): string {\n    return (this.listKey || this.key) as string;\n  }\n};\n\nconst methods = {\n  // NodePath_ancestry\n  findParent: NodePath_ancestry.findParent,\n  find: NodePath_ancestry.find,\n  getFunctionParent: NodePath_ancestry.getFunctionParent,\n  getStatementParent: NodePath_ancestry.getStatementParent,\n  getEarliestCommonAncestorFrom:\n    NodePath_ancestry.getEarliestCommonAncestorFrom,\n  getDeepestCommonAncestorFrom: NodePath_ancestry.getDeepestCommonAncestorFrom,\n  getAncestry: NodePath_ancestry.getAncestry,\n  isAncestor: NodePath_ancestry.isAncestor,\n  isDescendant: NodePath_ancestry.isDescendant,\n  inType: NodePath_ancestry.inType,\n\n  // NodePath_inference\n  getTypeAnnotation: NodePath_inference.getTypeAnnotation,\n  isBaseType: NodePath_inference.isBaseType,\n  couldBeBaseType: NodePath_inference.couldBeBaseType,\n  baseTypeStrictlyMatches: NodePath_inference.baseTypeStrictlyMatches,\n  isGenericType: NodePath_inference.isGenericType,\n\n  // NodePath_replacement\n  replaceWithMultiple: NodePath_replacement.replaceWithMultiple,\n  replaceWithSourceString: NodePath_replacement.replaceWithSourceString,\n  replaceWith: NodePath_replacement.replaceWith,\n  replaceExpressionWithStatements:\n    NodePath_replacement.replaceExpressionWithStatements,\n  replaceInline: NodePath_replacement.replaceInline,\n\n  // NodePath_evaluation\n  evaluateTruthy: NodePath_evaluation.evaluateTruthy,\n  evaluate: NodePath_evaluation.evaluate,\n\n  // NodePath_conversion\n  toComputedKey: NodePath_conversion.toComputedKey,\n  ensureBlock: NodePath_conversion.ensureBlock,\n  unwrapFunctionEnvironment: NodePath_conversion.unwrapFunctionEnvironment,\n  arrowFunctionToExpression: NodePath_conversion.arrowFunctionToExpression,\n  splitExportDeclaration: NodePath_conversion.splitExportDeclaration,\n  ensureFunctionName: NodePath_conversion.ensureFunctionName,\n\n  // NodePath_introspection\n  matchesPattern: NodePath_introspection.matchesPattern,\n  has: NodePath_introspection.has,\n  isStatic: NodePath_introspection.isStatic,\n  is: NodePath_introspection.is,\n  isnt: NodePath_introspection.isnt,\n  equals: NodePath_introspection.equals,\n  isNodeType: NodePath_introspection.isNodeType,\n  canHaveVariableDeclarationOrExpression:\n    NodePath_introspection.canHaveVariableDeclarationOrExpression,\n  canSwapBetweenExpressionAndStatement:\n    NodePath_introspection.canSwapBetweenExpressionAndStatement,\n  isCompletionRecord: NodePath_introspection.isCompletionRecord,\n  isStatementOrBlock: NodePath_introspection.isStatementOrBlock,\n  referencesImport: NodePath_introspection.referencesImport,\n  getSource: NodePath_introspection.getSource,\n  willIMaybeExecuteBefore: NodePath_introspection.willIMaybeExecuteBefore,\n  _guessExecutionStatusRelativeTo:\n    NodePath_introspection._guessExecutionStatusRelativeTo,\n  resolve: NodePath_introspection.resolve,\n  isConstantExpression: NodePath_introspection.isConstantExpression,\n  isInStrictMode: NodePath_introspection.isInStrictMode,\n\n  // NodePath_context\n  call: NodePath_context.call,\n  isDenylisted: NodePath_context.isDenylisted,\n  isBlacklisted: NodePath_context.isBlacklisted,\n  visit: NodePath_context.visit,\n  skip: NodePath_context.skip,\n  skipKey: NodePath_context.skipKey,\n  stop: NodePath_context.stop,\n  setScope: NodePath_context.setScope,\n  setContext: NodePath_context.setContext,\n  resync: NodePath_context.resync,\n  popContext: NodePath_context.popContext,\n  pushContext: NodePath_context.pushContext,\n  setup: NodePath_context.setup,\n  setKey: NodePath_context.setKey,\n  requeue: NodePath_context.requeue,\n  requeueComputedKeyAndDecorators:\n    NodePath_context.requeueComputedKeyAndDecorators,\n\n  // NodePath_removal\n  remove: NodePath_removal.remove,\n\n  // NodePath_modification\n  insertBefore: NodePath_modification.insertBefore,\n  insertAfter: NodePath_modification.insertAfter,\n  updateSiblingKeys: NodePath_modification.updateSiblingKeys,\n  unshiftContainer: NodePath_modification.unshiftContainer,\n  pushContainer: NodePath_modification.pushContainer,\n  hoist: NodePath_modification.hoist,\n\n  // NodePath_family\n  getOpposite: NodePath_family.getOpposite,\n  getCompletionRecords: NodePath_family.getCompletionRecords,\n  getSibling: NodePath_family.getSibling,\n  getPrevSibling: NodePath_family.getPrevSibling,\n  getNextSibling: NodePath_family.getNextSibling,\n  getAllNextSiblings: NodePath_family.getAllNextSiblings,\n  getAllPrevSiblings: NodePath_family.getAllPrevSiblings,\n  get: NodePath_family.get,\n  getAssignmentIdentifiers: NodePath_family.getAssignmentIdentifiers,\n  getBindingIdentifiers: NodePath_family.getBindingIdentifiers,\n  getOuterBindingIdentifiers: NodePath_family.getOuterBindingIdentifiers,\n  getBindingIdentifierPaths: NodePath_family.getBindingIdentifierPaths,\n  getOuterBindingIdentifierPaths:\n    NodePath_family.getOuterBindingIdentifierPaths,\n\n  // NodePath_comments\n  shareCommentsWithSiblings: NodePath_comments.shareCommentsWithSiblings,\n  addComment: NodePath_comments.addComment,\n  addComments: NodePath_comments.addComments,\n};\n\nObject.assign(NodePath_Final.prototype, methods);\n\nif (!process.env.BABEL_8_BREAKING && !USE_ESM) {\n  // @ts-expect-error babel 7 only\n  NodePath_Final.prototype.arrowFunctionToShadowed =\n    // workaround for rollup\n    // @ts-expect-error babel 7 only\n    NodePath_conversion[String(\"arrowFunctionToShadowed\")];\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error The original _guessExecutionStatusRelativeToDifferentFunctions only worked for paths in\n  // different functions, but _guessExecutionStatusRelativeTo works as a replacement in those cases.\n  NodePath_Final.prototype._guessExecutionStatusRelativeToDifferentFunctions =\n    NodePath_introspection._guessExecutionStatusRelativeTo;\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error The original _guessExecutionStatusRelativeToDifferentFunctions only worked for paths in\n  // different functions, but _guessExecutionStatusRelativeTo works as a replacement in those cases.\n  NodePath_Final.prototype._guessExecutionStatusRelativeToDifferentFunctions =\n    NodePath_introspection._guessExecutionStatusRelativeTo;\n\n  Object.assign(NodePath_Final.prototype, {\n    // NodePath_inference\n    _getTypeAnnotation: NodePath_inference._getTypeAnnotation,\n\n    // NodePath_replacement\n    _replaceWith: NodePath_replacement._replaceWith,\n\n    // NodePath_introspection\n    _resolve: NodePath_introspection._resolve,\n\n    // NodePath_context\n    _call: NodePath_context._call,\n    _resyncParent: NodePath_context._resyncParent,\n    _resyncKey: NodePath_context._resyncKey,\n    _resyncList: NodePath_context._resyncList,\n    _resyncRemoved: NodePath_context._resyncRemoved,\n    _getQueueContexts: NodePath_context._getQueueContexts,\n\n    // NodePath_removal\n    _removeFromScope: NodePath_removal._removeFromScope,\n    _callRemovalHooks: NodePath_removal._callRemovalHooks,\n    _remove: NodePath_removal._remove,\n    _markRemoved: NodePath_removal._markRemoved,\n    _assertUnremoved: NodePath_removal._assertUnremoved,\n\n    // NodePath_modification\n    _containerInsert: NodePath_modification._containerInsert,\n    _containerInsertBefore: NodePath_modification._containerInsertBefore,\n    _containerInsertAfter: NodePath_modification._containerInsertAfter,\n    _verifyNodeList: NodePath_modification._verifyNodeList,\n\n    // NodePath_family\n    _getKey: NodePath_family._getKey,\n    _getPattern: NodePath_family._getPattern,\n  });\n}\n\n// we can not use `import { TYPES } from \"@babel/types\"` here\n// because the transformNamedBabelTypesImportToDestructuring plugin in babel.config.js\n// does not offer live bindings for `TYPES`\n// we can change to `import { TYPES }` when we are publishing ES modules only\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  // @ts-expect-error typeKey must present in t\n  const fn = t[typeKey];\n  // @ts-expect-error augmenting NodePath prototype\n  NodePath_Final.prototype[typeKey] = function (opts: any) {\n    return fn(this.node, opts);\n  };\n\n  // @ts-expect-error augmenting NodePath prototype\n  NodePath_Final.prototype[`assert${type}`] = function (opts: any) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\n// Register virtual types validators after base types validators\nObject.assign(NodePath_Final.prototype, NodePath_virtual_types_validator);\n\nfor (const type of Object.keys(virtualTypes) as (keyof typeof virtualTypes)[]) {\n  if (type[0] === \"_\") continue;\n  if (!t.TYPES.includes(type)) t.TYPES.push(type);\n}\n\ninterface NodePathOverwrites {\n  // We need to re-define these predicate and assertion\n  // methods here, because we cannot refine `this` in\n  // a function declaration.\n  // See https://github.com/microsoft/TypeScript/issues/38150\n\n  /**\n   * NOTE: This assertion doesn't narrow the type on unions of\n   * NodePaths, due to https://github.com/microsoft/TypeScript/issues/44212\n   *\n   * @see ./conversion.ts for implementation.\n   */\n  ensureBlock(\n    this: NodePath_Final,\n  ): asserts this is NodePath_Final<\n    (\n      | t.Loop\n      | t.WithStatement\n      | t.Function\n      | t.LabeledStatement\n      | t.CatchClause\n    ) & { body: t.BlockStatement }\n  >;\n  /**\n   * @see ./introspection.ts for implementation.\n   */\n  isStatementOrBlock(\n    this: NodePath_Final,\n  ): this is NodePath_Final<t.Statement | t.Block>;\n}\n\ntype NodePathMixins = Omit<typeof methods, keyof NodePathOverwrites>;\n\ninterface NodePath<T extends t.Node>\n  extends InstanceType<typeof NodePath_Final>,\n    NodePathAssertions,\n    NodePathValidators,\n    NodePathMixins,\n    NodePathOverwrites {\n  type: T[\"type\"] | null;\n  node: T;\n  parent: t.ParentMaps[T[\"type\"]];\n  parentPath: t.ParentMaps[T[\"type\"]] extends null\n    ? null\n    : NodePath_Final<t.ParentMaps[T[\"type\"]]> | null;\n}\n\n// This trick is necessary so that\n// NodePath_Final<A | B> is the same as NodePath_Final<A> | NodePath_Final<B>\ntype NodePath_Final<T extends t.Node = t.Node> = T extends any\n  ? NodePath<T>\n  : never;\n\nexport { NodePath_Final as default, type NodePath as NodePath_Internal };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}